variant: fcos
version: 1.0.0
storage:
  files:

    # Disable automatic updates. We don't want containers to automatically
    # restart. The intention is to keep infrastructure completely immutable.
    # Machines should be provisioned on a regular basis (i.e. no machine should
    # live longer than a week). When a machine is provisioned, it'll
    # automatically boot with the latest OS.
    # https://github.com/coreos/zincati/blob/0.0.6/docs/usage/auto-updates.md#disabling-auto-updates
    - path: /etc/zincati/config.d/90-disable-auto-updates.toml
      mode: 0644
      contents:
        inline: |
          [updates]
          enabled = false

    # Configure private networking
    - path: /etc/NetworkManager/system-connections/private-net.nmconnection
      mode: 0600
      contents:
        inline: |
          [connection]
          id=private-net
          type=ethernet
          interface-name=eth1

          [ethernet]
          mtu=1450

          [ipv4]
          address1=$PRIVATE_IP/24
          method=manual

systemd:
  units:

    # Set firewall rules upon booting. This isn't currently working, but
    # keeping anyway. For now the firewall is managed by Vultr.
    - name: iptables-restore.service
      enabled: true
      contents: |
        [Unit]
        Description=Restore iptables firewall rules
        Before=iptables-store.service
        Before=network-pre.target
        Wants=network-pre.target

        [Service]
        Type=oneshot
        ExecStart=echo "*filter\
        ::INPUT ACCEPT [0:0]\
        ::FORWARD ACCEPT [0:0]\
        ::OUTPUT ACCEPT [0:0]\
        :-A INPUT -p tcp -m tcp --dport 22 -j ACCEPT\
        :COMMIT" | /usr/sbin/iptables-restore

        [Install]
        WantedBy=basic.target

    # Forward logs to LogDNA
    - name: logdna.service
      enabled: true
      contents: |
        [Unit]
        Description=LogDNA Forwarder
        After=network-online.target
        Wants=network-online.target

        [Service]
        Restart=on-failure
        ExecStartPre=-/bin/podman kill logdna
        ExecStartPre=-/bin/podman rm logdna
        ExecStartPre=/bin/podman pull okinta/fcos-logdna
        ExecStart=/bin/podman run -v /var/log/journal:/fluentd/log/journal:z --name logdna okinta/fcos-logdna

        [Install]
        WantedBy=multi-user.target

passwd:
  users:
    - name: regan

      # Allow viewing of systemd logs to allow diagnosing issues
      groups:
        - systemd-journal

      ssh_authorized_keys:
        - "$SSH_KEY"
